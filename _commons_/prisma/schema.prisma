// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../data"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  address        String   @unique
  name           String
  email          String
  status         Int      @default(1)
  network        Int      @default(1)
  planId         String
  privateKey     String
  activationCode String
  activationDate DateTime
  automations automations[]

  @@index([email])
}

model tokens {
  id       String @id @map("_id")
  name     String
  symbol   String
  decimals Int    @default(18)
  network  Int    @default(1)
}

model pools {
  id              String    @id @map("_id")
  token0          String
  token1          String
  symbol          String
  symbol0         String
  symbol1         String
  fee             Int
  exchange        Int       @default(1)
  network         Int       @default(1)
  price0          Float
  price0Change    Float
  price0_15       Float?
  price0Change_15 Float?
  price0_60       Float?
  price0Change_60 Float?
  price1          Float
  price1Change    Float
  price1_15       Float?
  price1Change_15 Float?
  price1_60       Float?
  price1Change_60 Float?
  lastUpdate      DateTime
  lastUpdate_15   DateTime?
  lastUpdate_60   DateTime?
  automations automations[] @ignore
}

type Condition {
  field String
  operator String
  value String
}

model automations {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  userId          String    @db.ObjectId
  user            users     @relation(fields: [userId], references: [id])
  exchange        Int       @default(1)
  network         Int       @default(1)
  name            String
  poolId          String?
  pool            pools?    @relation(fields: [poolId], references: [id])
  openCondition   Condition
  closeCondition  Condition
  isOpened        Boolean   @default(false)
  isActive        Boolean   @default(false)
  nextAmount      String
}